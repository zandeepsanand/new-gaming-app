{"version":3,"file":"src_app_ggera_admin_admin_module_ts.js","mappings":"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","sources":["./src/app/common/service/admin.service.ts","./src/app/ggera/admin/admin-routing.module.ts","./src/app/ggera/admin/admin.module.ts","./src/app/ggera/admin/dashboard/dashboard.component.ts","./src/app/ggera/admin/dashboard/dashboard.component.html","./src/app/ggera/admin/pro-request/pro-request.component.ts","./src/app/ggera/admin/pro-request/pro-request.component.html","./src/app/ggera/admin/pro-user-withdraw-request/pro-user-withdraw-request.component.ts","./src/app/ggera/admin/pro-user-withdraw-request/pro-user-withdraw-request.component.html"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { map, tap } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { AdminDashboardUserStatsModel } from \"../interface/admin.interface\";\r\nimport { ApiResponse } from \"../interface/api.interface\";\r\nimport { UserDetailedModel, WithdrawModel } from \"../interface/user.interface\";\r\n\r\n@Injectable({\r\n    providedIn: \"root\",\r\n})\r\nexport class AdminService {\r\n    host: string = environment.apiUrl;\r\n    constructor(private http: HttpClient) {}\r\n\r\n    getDashboardDetails() {\r\n        return this.http\r\n            .get<ApiResponse<AdminDashboardUserStatsModel>>(\r\n                `${this.host}/admin/user-stats`\r\n            )\r\n            .pipe(map((e) => e.data));\r\n    }\r\n\r\n    getProRequestUsers() {\r\n        return this.http\r\n            .get<ApiResponse<{ users: UserDetailedModel }>>(\r\n                `${this.host}/admin/pro-request/users`\r\n            )\r\n            .pipe(map((e) => e.data.users));\r\n    }\r\n\r\n    activateProRequestUser(id: string) {\r\n        return this.http\r\n            .patch<ApiResponse<string>>(\r\n                `${this.host}/admin/pro-request/user/${id}/activate`,\r\n                {}\r\n            )\r\n            .pipe(map((e) => e.data));\r\n    }\r\n\r\n    getWithdrawRequests() {\r\n        return this.http\r\n            .get<ApiResponse<WithdrawModel[]>>(\r\n                `${this.host}/admin/pro-request/withdraw/requests`\r\n            )\r\n            .pipe(map((e) => e.data));\r\n    }\r\n\r\n    acceptWithdrawRequests(id: string) {\r\n        return this.http\r\n            .patch<ApiResponse<string>>(\r\n                `${this.host}/admin/pro-request/withdraw/requests/${id}`,\r\n                {}\r\n            )\r\n            .pipe(map((e) => e.data));\r\n    }\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\nimport { ProRequestComponent } from \"./pro-request/pro-request.component\";\r\nimport { ProUserWithdrawRequestComponent } from \"./pro-user-withdraw-request/pro-user-withdraw-request.component\";\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: \"dashboard\",\r\n        component: DashboardComponent,\r\n    },\r\n    {\r\n        path: \"pre-request\",\r\n        component: ProRequestComponent,\r\n    },\r\n    {\r\n        path: \"withdraw-request\",\r\n        component: ProUserWithdrawRequestComponent,\r\n    },\r\n    {\r\n        path: \"\",\r\n        pathMatch: \"full\",\r\n        redirectTo: \"dashboard\",\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AdminRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\n\r\nimport { AdminRoutingModule } from \"./admin-routing.module\";\r\nimport { DashboardComponent } from \"./dashboard/dashboard.component\";\r\nimport { ProRequestComponent } from \"./pro-request/pro-request.component\";\r\nimport { AdminService } from \"src/app/common/service/admin.service\";\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { JwtInterceptor } from \"src/app/common/interceptor/jwt.interceptor\";\r\nimport { NgChartsModule } from 'ng2-charts';\r\nimport { ProUserWithdrawRequestComponent } from './pro-user-withdraw-request/pro-user-withdraw-request.component';\r\n\r\n@NgModule({\r\n    declarations: [DashboardComponent, ProRequestComponent, ProUserWithdrawRequestComponent],\r\n    imports: [\r\n        CommonModule,\r\n        NgChartsModule,\r\n        HttpClientModule,\r\n        AdminRoutingModule,\r\n    ],\r\n    providers: [\r\n        { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n        AdminService,\r\n    ],\r\n})\r\nexport class AdminModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ChartConfiguration, ChartData, ChartType } from 'chart.js';\r\nimport { BaseChartDirective } from 'ng2-charts';\r\nimport { Observable, tap } from 'rxjs';\r\nimport { AdminDashboardUserStatsModel } from 'src/app/common/interface/admin.interface';\r\nimport { AdminService } from 'src/app/common/service/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  stats$: Observable<AdminDashboardUserStatsModel> = null;\r\n  @ViewChild(BaseChartDirective) chart: BaseChartDirective | undefined;\r\n\r\n  // Pie\r\n  public pieChartOptions: ChartConfiguration['options'] = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: 'top',\r\n      },\r\n      // datalabels: {\r\n      //   formatter: (value, ctx) => {\r\n      //     if (ctx.chart.data.labels) {\r\n      //       return ctx.chart.data.labels[ctx.dataIndex];\r\n      //     }\r\n      //   },\r\n      // },\r\n    }\r\n  };\r\n  public pieChartData: ChartData<'pie', number[], string | string[]> = {\r\n    labels: [ 'Subscribers', 'Pro Users', 'Pro Requests' ],\r\n    datasets: [ {\r\n      data: [ 0, 0, 0 ]\r\n    } ]\r\n  };\r\n  public pieChartType: ChartType = 'pie';\r\n  public pieChartPlugins = [  ];\r\n  constructor(private adminService: AdminService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.stats$ = this.adminService.getDashboardDetails().pipe(tap(e => {\r\n      this.pieChartData.datasets[0] = {data: [e.subscriber, e.proUsers, e.proRequest]}\r\n    }));\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <ng-container *ngIf=\"stats$ | async as stats\">\r\n        <div class=\"row\">\r\n            <div class=\"col m-2 card text-bg-dark text-center\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">Subscriber</h5>\r\n                    <h6 class=\"card-subtitle mb-2 text-muted\">Number of users subscribed</h6>\r\n                    <p class=\"card-text\">{{ stats.subscriber }}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"col m-2 card text-bg-dark text-center\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">Pro Users</h5>\r\n                    <h6 class=\"card-subtitle mb-2 text-muted\">Number of pro users</h6>\r\n                    <p class=\"card-text\">{{ stats.proUsers }}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"col m-2 card text-bg-dark text-center\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">Pro Requests</h5>\r\n                    <h6 class=\"card-subtitle mb-2 text-muted\">Number of pro requests</h6>\r\n                    <p class=\"card-text\">{{ stats.proRequest }}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row my-4\">\r\n            <div class=\"col-12 col-lg-5 col-md-6\">\r\n                <canvas baseChart [data]=\"pieChartData\" [type]=\"pieChartType\" [options]=\"pieChartOptions\"\r\n                    [plugins]=\"pieChartPlugins\">\r\n                </canvas>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { Observable, tap } from \"rxjs\";\r\nimport { AdminService } from \"src/app/common/service/admin.service\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n    selector: \"app-pro-request\",\r\n    templateUrl: \"./pro-request.component.html\",\r\n    styleUrls: [\"./pro-request.component.scss\"],\r\n})\r\nexport class ProRequestComponent implements OnInit {\r\n    proUsers$: Observable<any>;\r\n    constructor(private adminService: AdminService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.getUsers();\r\n    }\r\n\r\n    getUsers() {\r\n        this.proUsers$ = this.adminService.getProRequestUsers();\r\n    }\r\n\r\n    activateUser(id: string) {\r\n        this.adminService\r\n            .activateProRequestUser(id)\r\n            .pipe(\r\n                tap((e) => {\r\n                    Swal.fire({\r\n                        icon: \"success\",\r\n                        title: \"Activated successfully\",\r\n                        showConfirmButton: false,\r\n                        timer: 1500,\r\n                    }).then(() => {\r\n                        this.getUsers();\r\n                    });\r\n                })\r\n            )\r\n            .subscribe();\r\n    }\r\n}\r\n","<div class=\"container\">\r\n    <ng-container *ngIf=\"proUsers$ | async as proUsers\">\r\n        <div class=\"row g-6\">\r\n            <div *ngFor=\"let user of proUsers\" class=\"col-4 m-2 card text-bg-dark\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title\">{{user.username}}</h5>\r\n                    <h6 class=\"card-subtitle mb-2 text-muted\">{{user.provider | titlecase }}</h6>\r\n                    <p class=\"card-text\">{{ user.email }}</p>\r\n                    <a (click)=\"activateUser(user._id)\" class=\"btn btn-primary\">Activate</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { AdminService } from \"src/app/common/service/admin.service\";\r\nimport { Observable, tap } from \"rxjs\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n@Component({\r\n    selector: \"app-pro-user-withdraw-request\",\r\n    templateUrl: \"./pro-user-withdraw-request.component.html\",\r\n    styleUrls: [\"./pro-user-withdraw-request.component.scss\"],\r\n})\r\nexport class ProUserWithdrawRequestComponent implements OnInit {\r\n    withdrawRequest$: Observable<any>;\r\n    constructor(private adminService: AdminService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.updateRequest();\r\n    }\r\n\r\n    updateRequest() {\r\n        this.withdrawRequest$ = this.adminService.getWithdrawRequests();\r\n    }\r\n\r\n    approveRequest(id: string) {\r\n        this.adminService\r\n            .acceptWithdrawRequests(id)\r\n            .pipe(\r\n                tap(() => {\r\n                    Swal.fire({\r\n                        icon: \"success\",\r\n                        title: \"Request Accepted\",\r\n                        showConfirmButton: false,\r\n                        timer: 1500,\r\n                    });\r\n                    this.updateRequest();\r\n                })\r\n            )\r\n            .subscribe();\r\n    }\r\n}\r\n","<ng-container *ngIf=\"withdrawRequest$ | async as withdrawRequest\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <h2>Withdraw Requests</h2>\r\n        </div>\r\n    </div>\r\n    <table class=\"table table-dark  table-striped-columns\">\r\n        <thead>\r\n            <th>Request Id</th>\r\n            <th>Amount</th>\r\n            <th>Action</th>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let request of withdrawRequest\">\r\n                <td>{{request.orderNo}}</td>\r\n                <td>{{request.amount}}</td>\r\n                <td>\r\n                    <ng-container *ngIf=\"!request.isApproved; else approved;\">\r\n                        <button class=\"btn btn-primary\" (click)=\"approveRequest(request._id)\">Approve</button>\r\n                    </ng-container>\r\n                    <ng-template #approved>\r\n                        <small>Approved</small>\r\n                    </ng-template>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</ng-container>"],"names":["BaseChartDirective","tap","i0","ctx_r0","DashboardComponent","constructor","adminService","responsive","plugins","legend","display","position","labels","datasets","data","ngOnInit","stats$","getDashboardDetails","pipe","e","pieChartData","subscriber","proUsers","proRequest","selectors","viewQuery","Swal","ProRequestComponent","getUsers","proUsers$","getProRequestUsers","activateUser","id","activateProRequestUser","fire","icon","title","showConfirmButton","timer","then","subscribe","decls","vars","consts","template","_r5","ProUserWithdrawRequestComponent","updateRequest","withdrawRequest$","getWithdrawRequests","approveRequest","acceptWithdrawRequests"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}